#! /usr/bin/python
# -*- coding: utf-8 -*-
import socket,sys
from struct import *
ipviews =[]
addview = False
sistemas = []
s=socket.socket(socket.AF_INET, socket.SOCK_RAW, socket.getprotobyname('tcp')) 

print"Leyendo paquetes TCP: \n"
while True:
    packet = s.recvfrom(65565)
    packet = packet[0]
    ip_header = packet[0:20]
    iph = unpack('!BBHHHBBH4s4s' , ip_header)
    version_ihl = iph[0]
    version = version_ihl >> 4
    ihl = version_ihl & 0xF
    iph_length = ihl * 4
    s_addr = socket.inet_ntoa(iph[8]);
    d_addr = socket.inet_ntoa(iph[9]);
    tcp_header = packet[iph_length:iph_length+20]
    tcph = unpack('!HHLLBBHHH' , tcp_header)
    source_port = tcph[0]
    dest_port = tcph[1]
    sequence = tcph[2]
    acknowledgement = tcph[3]
    doff_reserved = tcph[4]
    tcph_length = doff_reserved >> 4
    reserved = (doff_reserved & 0xF)>> 1
    flags = tcph[5]
    wsize = tcph[6]
    checksum = tcph[7]
    urgentpoint = tcph[8]
    for ips in ipviews:
        if ips == s_addr:
            addview=True
    if not (addview):
        if wsize == 5840:
            print 'Paquete TCP detectado proveniente del host: '+s_addr+', Sistema Operativo: Linux (Kernel 2.4 o 2.6)'
        elif wsize == 5720:
            print 'Paquete TCP detectado proveniente del host: '+s_addr+', Sistema Operativo: Linux, modificado por Google'
        elif wsize == 65535:
            print 'Paquete TCP detectado proveniente del host: '+s_addr+', Sistema Operativo: FreeBSD o Windows XP'
        elif wsize == 8192:
            print 'Paquete TCP detectado proveniente del host: '+s_addr+', Sistema Operativo: Windows Vista | 7 | 8 o Windows Server 2008 | 2012'
        elif wsize == 4128:
            print 'Paquete TCP detectado proveniente del host: '+s_addr+', Sistema Operativo: Cisco iOS 12.4'
        ipviews.append(s_addr)
    addview=False
